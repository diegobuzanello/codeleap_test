{"version":3,"sources":["assets/codeleap_logo_black.png","assets/bx_bx-edit.svg","assets/ic_baseline-delete-forever.svg","components/Button/index.tsx","components/Input/index.tsx","pages/SignUp/index.tsx","components/TextArea/index.tsx","actions/api.tsx","actions/index.ts","actions/types.ts","components/PostForm/index.tsx","components/ModalEdit/index.tsx","components/ModalDelete/index.tsx","components/Post/index.tsx","pages/MainScreen/index.tsx","routes.tsx","redux/reducers/posts.ts","redux/store/index.ts","App.tsx","index.tsx"],"names":["module","exports","Button","title","type","mode","rest","className","Input","label","idName","placeholder","htmlFor","id","SignUp","history","useHistory","useState","loading","setLoading","username","setUsername","useEffect","setTimeout","src","logoCodeLeap","alt","onSubmit","e","preventDefault","push","pathname","state","value","onChange","target","disabled","TextArea","api","axios","create","baseURL","headers","dispatch","getState","a","get","response","data","results","connect","useDispatch","setTitle","content","setContent","saveNewPostThunk","post","saveNewPost","rows","props","idItem","showHideClassName","show","patch","editPost","handleClose","onClick","delete","openDeleteModal","activeItemId","modal_delete","setModalDelete","modal_edit","setModalEdit","item","editIcon","deleteIcon","moment","created_datetime","from","Date","selectPosts","location","posts","useSelector","map","key","Routes","basename","process","path","exact","component","MainScreen","INITIAL_STATE","postReducer","action","filter","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90df99b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codeleap_logo_black.ac3755f2.png\";","module.exports = __webpack_public_path__ + \"static/media/bx_bx-edit.def4760f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_baseline-delete-forever.b3bd60bc.svg\";","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  title?: string;\r\n  type?: any;\r\n  mode?: any;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  title,\r\n  type,\r\n  mode,\r\n  ...rest\r\n}: any) => {\r\n  return (\r\n    <button className={mode} type={type} {...rest}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n","import React, { InputHTMLAttributes } from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n  idName: string;\r\n  placeholder: string;\r\n}\r\n\r\nexport const Input: React.FC<InputProps> = ({\r\n  label,\r\n  idName,\r\n  placeholder,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className=\"input-block\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <input id={idName} placeholder={placeholder} {...rest} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FormEvent, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport logoCodeLeap from \"../../assets/codeleap_logo_black.png\";\r\nimport { Button } from \"../../components/Button\";\r\nimport { Input } from \"../../components/Input\";\r\nimport \"./styles.css\";\r\n\r\nfunction SignUp() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function loadingSplash() {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1500);\r\n    }\r\n\r\n    loadingSplash();\r\n  }, []);\r\n\r\n  function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    history.push({ pathname: \"/posts\", state: { username } });\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div id=\"splash-screen\">\r\n        <img className=\"logo\" src={logoCodeLeap} alt=\"Codeleap logo\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main id=\"container-signup\">\r\n        <h1>Welcome to CodeLeap network!</h1>\r\n        <form onSubmit={handleSubmit} className=\"signup-form\">\r\n          <Input\r\n            label=\"Please enter your username\"\r\n            placeholder=\"John Doe\"\r\n            idName=\"name\"\r\n            value={username}\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Button\r\n            title=\"ENTER\"\r\n            type=\"submit\"\r\n            disabled={!username}\r\n            mode=\"contained\"\r\n          ></Button>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { TextareaHTMLAttributes } from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface InputProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  label: string;\r\n  idName: string;\r\n  placeholder: string;\r\n}\r\n\r\nexport const TextArea: React.FC<InputProps> = ({\r\n  label,\r\n  idName,\r\n  placeholder,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className=\"input-block\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <textarea id={idName} placeholder={placeholder} {...rest}></textarea>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://dev.codeleap.co.uk/careers/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import { ADD_POST, EDIT_POST, DELETE_POST, RECEIVED_DATA } from \"./types\";\r\nimport api from \"./api\";\r\n\r\nexport async function fetchPosts(dispatch: any, getState: any) {\r\n  const response = await api.get(\"\");\r\n  dispatch({ type: RECEIVED_DATA, data: response.data.results });\r\n}\r\n\r\nexport function saveNewPost(data: any) {\r\n  return async function saveNewPostThunk(dispatch: any, getState: any) {\r\n    const response = await api.post(\"\", data);\r\n    dispatch({ type: ADD_POST, data: response.data });\r\n  };\r\n}\r\n\r\nexport function editPost(id: any, data: any) {\r\n  return async function editPostThunk(dispatch: any, getState: any) {\r\n    const response = await api.patch(`/${id}/`, data);\r\n    dispatch({ type: EDIT_POST, data: response.data });\r\n  };\r\n}\r\n\r\nexport function deletePost(id: any) {\r\n  return async function deletePostThunk(dispatch: any, getState: any) {\r\n    await api.delete(`/${id}/`);\r\n    dispatch({ type: DELETE_POST, id });\r\n  };\r\n}\r\n","export const ADD_POST = \"ADD_POST\";\r\nexport const EDIT_POST = \"EDIT_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const RECEIVED_DATA = \"RECEIVED_DATA\";\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Button } from \"../Button\";\r\nimport { Input } from \"../Input\";\r\nimport { TextArea } from \"../TextArea\";\r\nimport { saveNewPost } from \"../../actions/index\";\r\nimport \"./styles.css\";\r\n\r\nconst PostForm = ({ username }: any) => {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      username,\r\n      title,\r\n      content,\r\n    };\r\n\r\n    const saveNewPostThunk = saveNewPost(data);\r\n    dispatch(saveNewPostThunk);\r\n\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <fieldset>\r\n        <h2>What’s on your mind?</h2>\r\n        <Input\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n          placeholder=\"Hello world\"\r\n          idName=\"title\"\r\n        />\r\n\r\n        <TextArea\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => {\r\n            setContent(e.target.value);\r\n          }}\r\n          placeholder=\"Content here\"\r\n          idName=\"content\"\r\n          rows={4}\r\n        />\r\n\r\n        <Button\r\n          title=\"CREATE\"\r\n          type=\"submit\"\r\n          disabled={!content || !title}\r\n          mode=\"contained\"\r\n        />\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connect()(PostForm);\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport \"./styles.css\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Input } from \"../Input\";\r\nimport { editPost } from \"../../actions/index\";\r\n\r\nconst ModalEdit = (props: any) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const id = props.idItem;\r\n\r\n  const showHideClassName = props.show\r\n    ? \"modal display-block\"\r\n    : \"modal display-none\";\r\n\r\n  function handleEdit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      title,\r\n      content,\r\n    };\r\n\r\n    dispatch(editPost(id, data));\r\n\r\n    props.handleClose();\r\n  }\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <div className=\"container-modal\">\r\n        <form onSubmit={handleEdit}>\r\n          <h2>Edit item</h2>\r\n          <Input\r\n            label=\"Title\"\r\n            value={title}\r\n            placeholder=\"Hello World\"\r\n            idName=\"title\"\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Input\r\n            label=\"Content\"\r\n            value={content}\r\n            placeholder=\"Content here\"\r\n            idName=\"content\"\r\n            onChange={(e) => {\r\n              setContent(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <div className=\"buttons\">\r\n            <Button title=\"SAVE\" mode=\"contained\" type=\"submit\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(ModalEdit);\r\n","import React from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport \"./styles.css\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { deletePost } from \"../../actions/index\";\r\n\r\nconst ModalDelete = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const showHideClassName = props.show\r\n    ? \"modal display-block\"\r\n    : \"modal display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <div className=\"container-modal\">\r\n        <h2>Are you sure you want to delete this item?</h2>\r\n        <div className=\"buttons\">\r\n          <Button title=\"Cancel\" mode=\"outlined\" onClick={props.handleClose} />\r\n          <Button\r\n            title=\"OK\"\r\n            mode=\"outlined\"\r\n            onClick={() => dispatch(deletePost(props.idItem))}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(ModalDelete);\r\n","import React, { useState } from \"react\";\r\nimport editIcon from \"../../assets/bx_bx-edit.svg\";\r\nimport deleteIcon from \"../../assets/ic_baseline-delete-forever.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport ModalEdit from \"../ModalEdit\";\r\nimport ModalDelete from \"../ModalDelete\";\r\n\r\nconst Post = (props: any) => {\r\n  const [modal_delete, setModalDelete] = useState({\r\n    openDeleteModal: false,\r\n    activeItemId: \"\",\r\n  });\r\n\r\n  const [modal_edit, setModalEdit] = useState({\r\n    openDeleteModal: false,\r\n    activeItemId: \"\",\r\n  });\r\n\r\n  function openModalDelete(item: any) {\r\n    setModalDelete({\r\n      openDeleteModal: true,\r\n      activeItemId: item.id,\r\n    });\r\n  }\r\n\r\n  function closeModalDelete(item: any) {\r\n    setModalDelete({\r\n      openDeleteModal: false,\r\n      activeItemId: item.id,\r\n    });\r\n  }\r\n\r\n  function openModalEdit(item: any) {\r\n    setModalEdit({\r\n      openDeleteModal: true,\r\n      activeItemId: item.id,\r\n    });\r\n  }\r\n\r\n  function closeModalEdit() {\r\n    setModalEdit({\r\n      openDeleteModal: false,\r\n      activeItemId: \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"header\">\r\n        <h2>{props.post.title}</h2>\r\n        <div className=\"icons\">\r\n          {props.post.username === props.username && (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  openModalEdit(props.post);\r\n                }}\r\n                src={editIcon}\r\n                alt=\"edit post\"\r\n              />\r\n\r\n              <img\r\n                onClick={() => {\r\n                  openModalDelete(props.post);\r\n                }}\r\n                src={deleteIcon}\r\n                alt=\"delete post\"\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <div className=\"header-content\">\r\n          <p className=\"author\">{props.post.username}</p>\r\n          <p className=\"date\">\r\n            {moment(props.post.created_datetime).from(new Date())}\r\n          </p>\r\n        </div>\r\n\r\n        <p className=\"content-paragraph\">{props.post.content}</p>\r\n      </div>\r\n      <ModalEdit\r\n        show={modal_edit.openDeleteModal}\r\n        idItem={modal_edit.activeItemId}\r\n        handleClose={closeModalEdit}\r\n      />\r\n      <ModalDelete\r\n        show={modal_delete.openDeleteModal}\r\n        idItem={modal_delete.activeItemId}\r\n        handleClose={closeModalDelete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(Post);\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport PostForm from \"../../components/PostForm\";\r\nimport Post from \"../../components/Post\";\r\n\r\nconst selectPosts = (state: any) => state.data;\r\n\r\nfunction MainScreen({ location }: any) {\r\n  const username = location.state.username;\r\n  const posts = useSelector(selectPosts);\r\n\r\n  return (\r\n    <div id=\"container-mainscreen\">\r\n      <div className=\"header\">\r\n        <h2>CodeLeap Network</h2>\r\n      </div>\r\n\r\n      <PostForm username={username} />\r\n\r\n      <main>\r\n        {posts.map((post: any) => (\r\n          <div key={post.id}>\r\n            <Post username={username} post={post} key={post.id} />\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(MainScreen);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport SignUp from \"./pages/SignUp\";\r\nimport MainScreen from \"./pages/MainScreen\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={SignUp} />\r\n        <Route path=\"/posts\" component={MainScreen} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import {\r\n  ADD_POST,\r\n  EDIT_POST,\r\n  DELETE_POST,\r\n  RECEIVED_DATA,\r\n} from \"../../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  data: [],\r\n};\r\n\r\ninterface Post {\r\n  id: number;\r\n}\r\n\r\nconst postReducer = (state = INITIAL_STATE, action: any) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        data: [action.data, ...state.data],\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        data: state.data.filter((post: Post) => post.id !== action.id),\r\n      };\r\n    case EDIT_POST:\r\n      return {\r\n        data: state.data.map((item: Post) => {\r\n          return item.id === action.data.id ? action.data : item;\r\n        }),\r\n      };\r\n    case RECEIVED_DATA:\r\n      return {\r\n        data: action.data,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport postReducer from \"../reducers/posts\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nexport const store = createStore(postReducer, composedEnhancer);\r\n","import React from \"react\";\nimport \"./styles/global.css\";\nimport Routes from \"./routes\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nimport { fetchPosts } from \"./actions/index\";\n\nstore.dispatch(fetchPosts);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}